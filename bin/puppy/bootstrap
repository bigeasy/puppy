#!/bin/bash

user=$1

if [ -z $user ]
then
    echo "User name for primary user required." 1>&2
    exit 1
fi

if [ -z "$SSH_AUTH_SOCK" ]
then
    echo "No SSH agent available." 1>&2
    exit 1
fi

if [ -z "$SUDO_USER" ]
then
    sudoer=root
else
    sudoer=$SUDO_USER
fi
sudoer_home=$(/bin/grep "^$sudoer" /etc/passwd | /bin/cut -d: -f6)

cat <<EOF > $sudoer_home/rpms.txt
cyrus-sasl-plain
git
gnupg
make
policycoreutils-python
postfix
s3cmd
vim
EOF

function make_group()
{
    group=$1
    gid=$2
    cut -d: -f1 /etc/group | grep '^'$group'$' > /dev/null
    ret=$?
    if [ $ret != 0 ]
    then
        echo "Creating group $group."
        /usr/bin/sudo /usr/sbin/groupadd --gid $gid $group
    else
        echo "Group $group exists."
    fi
}

function make_user()
{
    user=$1
    uid=$2
    gid=$3
    cut -d: -f1 /etc/passwd | grep '^'$user'$' > /dev/null
    ret=$?
    if [ $ret != 0 ]
    then
        echo "Creating user $user."
        /usr/bin/sudo /usr/sbin/useradd --uid $uid --gid $gid $user --groups wheel
    else
        echo "User $user exists."
    fi
}

# Update yum, because we may freeze the image and reuse it much later.
/usr/bin/yum update -y

# Get rid of sendmail, always.
/bin/rpm -e sendmail 2> /dev/null

# Install rpms the are not already installed.
dirname=$(dirname $0)
/bin/cat "$dirname/rpms.txt" | /usr/bin/xargs /usr/bin/sudo /usr/bin/yum -y install 

# Create the development user.
make_group $user 701
make_user $user 701 701

if [ ! -e /home/$user/.ssh/authorized_keys ]
then
    /usr/bin/sudo -u $user /bin/mkdir -m 755 -p /home/$user/.ssh
    /bin/cp -p $sudoer_home/.ssh/authorized_keys /home/$user/.ssh/
    /bin/chown $user:$user /home/$user/.ssh/authorized_keys
fi

if [ ! -e /home/$user/git/ecma/puppy/janitor ]
then
    /bin/cp $sudoer_home/.ssh/known_hosts /home/$user/.ssh/known_hosts
    /bin/chown $user:$user /home/$user/.ssh/known_hosts
    /usr/bin/sudo -u $user /bin/mkdir -p /home/$user/git/ecma/puppy
    /usr/bin/ssh -o ForwardAgent=yes -o NoHostAuthenticationForLocalhost=yes -l $user localhost /usr/bin/git clone -b janitor git@bled.prettyrobots.com:puppy.git /home/$user/janitor
fi

cat<<EOL > /root/wheel
%wheel	ALL=(ALL)	NOPASSWD: ALL
EOL

/bin/chmod 440 /root/wheel
/bin/mv /root/wheel /etc/sudoers.d/

if [ -e /boot/grub/grub.conf ]; then
    /bin/chmod 600 /boot/grub/grub.conf

    # Recreate grub.conf with selinux on.
    /bin/sed -ie "s/ selinux=0//" /boot/grub/grub.conf
fi

# Relabel the drive at the next boot.
touch /.autorelabel 


# Rebuild the policy.
/usr/sbin/semodule -B

# Generate the file `/var/lib/sepolgen/interface_info` for use with `audit2allow`.
/usr/bin/sepolgen-ifgen
