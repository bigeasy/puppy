#!/bin/sh
# <UDF NAME="PUBLIC_KEY" LABEL="Public SSH Key" />

# Create a new instance using a StackScript. It will initialize using the
# default Fedora 13 configuration. Boot that and it will run this. Then reboot
# using pv-grub-x86_32 as the kernel. You'll be able to login as root through
# ssh using the root password. Continue building from there.

# My system IP/set ip address of server
SERVER_IP=`ifconfig | grep 'inet addr:' | grep -v '127.0.0.1' | sed 's/.*inet addr:\([0-9.]\+\).*/\1/g'`

echo $SERVER_IP

# Flushing all rules
iptables -F
iptables -X
# Setting default filter policy
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP
# Allow unlimited traffic on loopback
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Allow incoming ssh only

iptables -A INPUT -p tcp -s 0/0 -d $SERVER_IP --sport 513:65535 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -s $SERVER_IP -d 0/0 --sport 22 --dport 513:65535 -m state --state ESTABLISHED -j ACCEPT
iptables -A INPUT -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT

service iptables save

yum -y update
yum -y groupinstall core
yum -y install kernel-PAE.i686

touch /.autorelabel

vmlinuz=`ls /boot/vmlinuz-*`
initramfs=`ls /boot/initramfs-*`
kernel=`ls /boot/vmlinuz-* | sed 's/\/boot\/vmlinuz-//'`

cat <<HERE > /boot/grub/menu.lst
timeout 0

title           Fedora 13, kernel $kernel
root            (hd0)
kernel          $vmlinuz root=/dev/xvda ro quiet
initrd          $initramfs
HERE

/bin/mkdir -p /root/.ssh
echo "$PUBLIC_KEY" > /root/.ssh/authorized_keys
/bin/chmod 600 /root/.ssh/authorized_keys

echo "portoroz.prettyrobots.com,72.14.189.246 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyDD/JdcbtS2/+scdHbQBpSNoaaJOYUBXtkGpO83t3f1PT48Wi2XPN6IsBPHnj+DQXzBCxfFnClmzK64/eBpYwrnuJlueqHAc8lMsYybTUh+URnD8Bh/XowMTxxRFt5piXdEkfvp6CTBZDH14lQdtI+M75fC29FrVDa7JCoBArV9QVHmT/+rjxFZJKPRs65BkmCVL6dDReBYpoQq+Bl/CkIEw8m/L81GPggbGJ5Fuje9uj5b3Q5xLmnNvwVRO/Niej3Obj8MOUIqKfXsOmu+r1uTLWaSvR1TLzJwQ2MUA4EXJ545CeZC1oGINnyAhZdCV85g+1pzT3YcCfKNSu2tYX" > /root/.ssh/known_hosts
echo "bled.prettyrobots.com,67.23.79.184 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAr8mJgXTqaCz2TOkeW8mY0swuNxF1PH9sCB+TIvTQP18e3a0ygiN0N3V9OXbfTXA4ur/xlm2YPO/gmhWv2rLyYh+s+Snt1BLcgsYiAR3/AGX43E7ZWd1sW2xZC1VTou4GP3kIxHX7BkNrDLoW8qTFeID/5gxaulYhc1jI4WJOg3qIJIvwqgqd9ixDDd9CCGRNWaUQaNf2B0DsyfWSTyVLHaUWAMBop0P1tmFuWSX8TNdfawrIB0Y3pk30diVeiFjOlkvIQyMDAnNpQ5UCf5Cx/VrH/u25bsP8OdW2vAoNfrffw9rlaJ46Zgu6dHbtradBTk8Yq5phc+iRwYCy9TyQlQ==" >> /root/.ssh/known_hosts

cat <<HERE > /root/continue
#!/bin/bash

/usr/bin/scp alan@portoroz.prettyrobots.com:/home/alan/git/ecma/puppy/system/bin/bootstrap /root/bootstrap
/usr/bin/scp alan@portoroz.prettyrobots.com:/home/alan/git/ecma/puppy/system/bin/rpms.txt /root/rpms.txt
/bin/chmod 755 /root/bootstrap
HERE

/bin/chmod 755 /root/continue

cat <<'FINGERPRINT' > /etc/rc.d/init.d/zfingerprint
#!/bin/bash

# chkconfig: 2345 95 20
# description: Display the RSA fingerprint.

case "$1" in
        start)
                echo "Fingerprint is $(/usr/bin/ssh-keygen -lf /etc/ssh/ssh_host_rsa_key)"
                ;;
        stop)
                ;;
        *)
                echo $"Usage: $0 {start}"
                RETVAL=2
esac
exit $RETVAL
FINGERPRINT

/bin/chmod 755 /etc/rc.d/init.d/zfingerprint
/sbin/chkconfig --add zfingerprint
/sbin/chkconfig zfingerprint on

/sbin/shutdown -h now
