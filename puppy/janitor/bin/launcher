#!/usr/bin/env node

function log (message, code, stderr) {
  var programName = __filename.replace(/^.*\/(.*)$/, "$1");
  var branchName = __filename.replace(/^\/puppy\/(.*?)\/.*$/, "$1");
  var tag = (branchName + '_try') == programName ? programName : branchName + "_" + programName;
  var syslog = new (require("common").Syslog)({ tag: tag, pid: true });
  var context = { code: code }
  if (stderr.length > 0) {
    context.stderr = stderr;
  }
  syslog.send("err", "CATCH: " + message, context, function () {
    process.exit(code);
  });
}

var spawn = require("child_process").spawn
var program = spawn(__filename.replace(/\/([^\/]+)_try$/, "/$1"), process.argv.slice(2), { customFds: [ 0, 1, -1 ] });
stderr = "";
program.stderr.on("data", function (chunk) {
  stderr += chunk.toString();
  if (stderr.length > 4 * 1024) {
    log("Spewed over 4K to stderr.", 1, stderr);
  }
});
program.on("exit", function (code) {
  if (code != 0) {
    log("Unexpected program failure.", code, stderr);
  } else if (stderr.length) {
    log("Unexpected error output.", code, stderr);
  }
});
