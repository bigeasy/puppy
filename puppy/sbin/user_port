#!/bin/bash

. /puppy/bin/functions

uid=$1
port=$2
assert_valid_user $uid

# Get the current policy version for the user.
version=$(/usr/bin/sudo -u delegate /puppy/bin/user_policy_version $(/bin/hostname) $uid 2>/dev/null)
[ $? -ne 0 ] && abend "MySQL not available."

# Get the targeted policy version.
target_version=$(/usr/bin/sudo -u delegate /puppy/bin/policy_version $(/bin/hostname) $uid)
if [ $version -ne $target_version ]; then
    abend "Policy has not been created on host $(/bin/hostname) for user $uid."
fi

# Determine if the port has already been labeled according to the database.
labeled=$(/usr/bin/sudo -u delegate /puppy/bin/port_labeled $(/bin/hostname) $port)
if [ $labeled -ne 1 ]; then
    found=$(/usr/sbin/semanage port -l | \
        /bin/awk '$1 ~ /protected_u10002_port_t/ { print $0 }' | \
        /puppy/bin/filter_selinux_ports | \
        /bin/grep $port)
    echo $found 1>&2
    if [ -z $found ]; then
        /usr/sbin/semanage port -a -t protected_u${uid}_port_t -p tcp $port
    fi
    # Determine if the port has already been labeled according to semanage.
    /usr/bin/sudo -u delegate /puppy/bin/port_labeled $(/bin/hostname) $port 1
fi
