#!/bin/bash

function abend()
{
    message=$1
    echo "ERROR: $message" 1>&1
    exit 1
}

[ $# -eq 1 ] && [ -d $1 ] || abend "Must provide a working directory."

project=$(readlink -f $1)
basename=$(basename $project)

cd $project

if [ -e Cakefile ]; then
    if [ -d src ]; then
        /usr/bin/cake compile
    fi

    npm_config_root=/puppy/lib/node npm_config_binroot=/puppy/bin npm_config_manroot=/puppy/share/man \
        /usr/bin/sudo -E /usr/bin/npm install .
    /usr/bin/sudo /sbin/restorecon -R /puppy
fi

function copy_file()
{
    source=$1
    dest=$2
    ownership=$3
    mode=$4
    file=$(basename $source)
    /bin/mkdir -p $dest
    install=0
    if [ -e $dest/$file ]; then
        if [ $(/usr/bin/stat --format=%Y $source) -gt $(/usr/bin/stat --format=%Y $dest/$file) ]; then
            install=1
        fi 
    else
        install=1
    fi
    if [ $install -eq 1 ]; then
        echo "Installing program $dest/$file."
        /bin/cp $source $dest/$file
    fi
    /bin/chmod $mode $dest/$file
    if [ $(/usr/bin/stat --format=%A $source | /usr/bin/cut -c 4) == "-" ]; then
        /bin/chmod gou-x $dest/$file
    fi
    /bin/chown $ownership $dest/$file
}

function copy_files()
{
    dir=$1
    if [ -e $dir ]; then
        dest=$2
        ownership=$3
        mode=$4
        for file in $(/bin/ls $dir); do
            copy_file $dir/$file $dest $ownership $mode
        done
    fi
}

if [ $basename == "system" ]; then
    user=root
    mode=755
elif [ ! -z $(echo $basename | grep '^\(public\|protected\|private\)$') ]; then
    user=delegate
    mode=500
elif [ $basename == "job" ]; then
    user=worker
    mode=500
else
    user=$basename
    mode=500
fi

copy_files puppy/bin /puppy/bin $user:$user $mode
copy_files puppy/sbin /puppy/sbin root:root 500

if [ -d src -a ! -d lib ]; then
    for coffee in $(ls src/*.coffee); do
        program=$(echo $coffee | /bin/sed 's/src\/\(.*\).coffee$/\1/')
        if [ -e /puppy/bin/$program ]; then
            receptionist="_receptionist$"
            if [[ $program =~ $receptionist ]]; then
                ownership=$basename:$basename
            else
                ownership=$user:$user
            fi
            /bin/chmod $mode /puppy/bin/$program*
            /bin/chown $ownership /puppy/bin/$program*
            /bin/chmod $mode /puppy/bin/$program
            /bin/chown $ownership /puppy/bin/$program
        fi
    done
fi

/sbin/restorecon -R /puppy
