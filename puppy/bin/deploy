#!/bin/bash

# Emit an error message to stderr and return a non-zero exit code.
function abend()
{
    message=$1
    echo "ERROR: $message" 1>&1
    exit 1
}

# Argument validation.
[ $# -eq 1 ] && [ -d $1 ] || abend "Must provide a working directory."

# Fetch the directory name to determine the owner of the installed files.
project=$(readlink -f $1)
basename=$(basename $project)

# Change directory to the project directory.
cd $project

# If we have a Cakefile and a src directory, then run cake and npm.
if [ -e Cakefile ]; then
    if [ -d src ]; then
        /usr/bin/cake compile
    fi

    npm_config_root=/puppy/lib/node npm_config_binroot=/puppy/bin npm_config_manroot=/puppy/share/man \
        /usr/bin/sudo -E /usr/bin/npm install .
    /usr/bin/sudo /sbin/restorecon -R /puppy
fi

# Copy a file to a target directory assigning an owner and mode. Creates the
# directory if necessary. Sets the execute bit if the execute bit is set on the
# source, so you can specify a mode without the execute bit set and copy both
# executables and configuration files.
function copy_file()
{
    source=$1
    dest=$2
    ownership=$3
    mode=$4
    file=$(basename $source)
    /usr/bin/sudo /bin/mkdir -p $dest
    install=0
    if [ -e $dest/$file ]; then
        if [ $(/usr/bin/stat --format=%Y $source) -gt $(/usr/bin/sudo /usr/bin/stat --format=%Y $dest/$file) ]; then
            install=1
        fi 
    else
        install=1
    fi
    if [ $install -eq 1 ]; then
        echo "Installing program $dest/$file."
        /usr/bin/sudo /bin/cp $source $dest/$file
    fi
    /usr/bin/sudo /bin/chmod $mode $dest/$file
    if [ $(/usr/bin/stat --format=%A $source | /usr/bin/cut -c 4) == "-" ]; then
        /usr/bin/sudo /bin/chmod gou-x $dest/$file
    fi
    /usr/bin/sudo /bin/chown $ownership $dest/$file
}

# Copy a collection of files found in a directory with a specific mode.
function copy_files()
{
    dir=$1
    if [ -e $dir ]; then
        ownership=$2
        mode=$3
        for file in $(/bin/find $dir -type f); do
            copy_file $file $(dirname /$file)  $ownership $mode
        done
    fi
}

# Chose an owner and mode based on the project directory name. Slightly kludgey.
if [ $basename == "system" ]; then
    user=root
    mode=755
elif [ $basename == "private" ]; then
    user=delegate
    mode=500
elif [ $basename == "job" ]; then
    user=worker
    mode=500
else
    user=$basename
    mode=550
fi

# Install bash programs.
copy_files puppy/bin $user:$user $mode
copy_files puppy/sbin root:root 500

# Set ownership of Node.js programs.
if [ -d src -a ! -d lib ]; then
    for coffee in $(ls src/*.coffee | /bin/sort); do
        program=$(echo $coffee | /bin/sed 's/src\/\(.*\).coffee$/\1/')
        if [ -e /puppy/bin/$program ]; then
            ownership=$user:$user
            /usr/bin/sudo /bin/chmod $mode /puppy/bin/$program@*
            /usr/bin/sudo /bin/chown $ownership /puppy/bin/$program@*
            /usr/bin/sudo /bin/chmod $mode /puppy/bin/$program
            /usr/bin/sudo /bin/chown $ownership /puppy/bin/$program
        fi
    done
fi

/usr/bin/sudo /sbin/restorecon -R /puppy
