#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #   
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in 
    #    /etc/sysconfig/syslog
    #   
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to 
    #   /etc/sysconfig/syslog
    #   
    #    local2.*                       /var/log/haproxy.log
    #    
    log         127.0.0.1 local2 

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    #stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will 
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main
    bind                        *:80

    option                      originalto

    acl                         is_dirtysouthbureau_com hdr_end(host) -i dirtysouthbureau.com
    acl                         is_www_thirdlegconsultants_com hdr(host) -i www.thirdlegconsultants.com
    acl                         is_thirdlegconsultants_com hdr(host) -i thirdlegconsultants.com
    acl                         is_register_wrinkledog_com hdr_end(host) -i register.wrinkledog.com

    redirect                    location http://www.thirdlegconsultants.com/ if is_thirdlegconsultants_com
    use_backend                 bled if is_dirtysouthbureau_com
    use_backend                 bled if is_www_thirdlegconsultants_com
    use_backend                 register if is_register_wrinkledog_com
    default_backend             vhosts
   
frontend  secure
    bind                        *:8443
    acl bravo                   url_beg /xerox/bravo/

    use_backend                 xerox_bravo if bravo
    default_backend             xerox_alpha
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend vhosts
    balance     roundrobin
    server  	vhosts1 	127.0.0.1:8080

backend bled
    balance     roundrobin
    server  	dsb1 	    67.23.79.184:8386

backend xerox_alpha
    balance     roundrobin
    server  	xa1 	    localhost:8086

backend xerox_bravo
    balance     roundrobin
    server  	xb1 	    localhost:8686

backend register
    balance     roundrobin
    server  	vhosts1 	127.0.0.1:8687
