#!/bin/bash -e

dir=$(/bin/readlink -f "$(/usr/bin/dirname $0)/../../..")

puppify module <<-usage
  usage: puppify checkout [options] [branches]

    Checkout Puppy branches into project directories that are siblings of the
    current directory. This checks out all off the branches needed to build
    Puppy.
    
    You can specify addtional branches as arguments.

      puppify checkout new-feature-1 new-feature-3

    This will checkout all of the Puppy project branches, plus the branches
    "new-feature-1" and "new-feature-2".

  options:
    -D,   --directory   use this directory as the root instead of the parent
                        directory of the current working directory.
usage

eval set -- "$(/usr/bin/getopt -o D: -l directory: -- "$@")"

CWD=$(pwd)
while [ -h "$CWD" ] ; do CWD="$(readlink "$CWD")"; done
dir="$( cd -P "$( dirname "$CWD" )" && pwd )"

while [ $# -ne 0 -a "$1" != "--" ]; do
  case "$1" in
    -D|--d*) dir=$2; shift;;
  esac
  shift
done

[ $1 == "--" ] && shift

while [ -h "$dir" ] ; do dir="$(readlink "$dir")"; done

[ -d $dir ] || abend "not a directory: $dir"

branches=(janitor common private protected public system worker appliances \
    vhosts database client liminal exclusive job $@)

if [ ! -e $dir/github ]
then
    cd $dir
    /usr/bin/git clone git@github.com:bigeasy/puppify.git github
fi

cd $dir/github
/usr/bin/git fetch --all

for branch in "${branches[@]}"; do
    /usr/bin/git checkout $branch 
    git rebase origin/$branch || abend "Cannot rebase $branch."
done

for branch in "${branches[@]}"; do
    if [ ! -e $dir/$branch ]
    then
        cd $dir
        /usr/bin/git clone -b $branch $dir/github $branch
        cd $dir/$branch
        /usr/bin/git remote add github git@github.com:bigeasy/puppify.git
    fi
done

for branch in "${branches[@]}"; do
    cd $dir/$branch
    if [ "$(/usr/bin/git branch | /bin/grep '^*' | /bin/cut -f2 -d' ')" == "$branch" ]
    then
        /usr/bin/git pull
    else
        echo "Sub-project $branch is on a development branch."
    fi
done
