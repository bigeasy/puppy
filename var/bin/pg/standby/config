#!/bin/bash

if [ $(/usr/bin/id -u) -ne 0 ]
then
    echo "Must run as root." 1>&2
    exit 1
fi

function abend()
{
    local message=$1
    echo "error: $message." 1>&2
}

dir=$(/bin/readlink -f "$(/usr/bin/dirname $0)/../../../..")
$dir/var/bin/pg/config

cat <<EOL >> /var/lib/pgsql/data/postgresql.conf
hot_standby = on
EOL

hostname=$(/bin/hostname)
[[ $hostname =~ ^([^.]*)\.([^.]*)\.([^.]*)\.([^.]*)\.(.*)$ ]] || abend "bad hostname"
alpha=${BASH_REMATCH[1]}
type=${BASH_REMATCH[2]}
direction=${BASH_REMATCH[3]}
region=${BASH_REMATCH[4]}
domain=${BASH_REMATCH[5]}

declare -A pairs
pairs=([north]=south [south]=north [east]=west [west]=east)

declare -A axes
axes=([north]=vertical [south]=vertical [east]=horizontal [west]=horizontal)

primary="$alpha.$type.${pairs[$direction]}.$region.$domain"

dir=$(/bin/readlink -f "$(/usr/bin/dirname $0)/../../../..")
ip=$($dir/var/bin/dns/private/address --region $region --axis ${axes[$direction]} | while read line
do
    pair=($line)
    if [ ${pair[0]} == $primary ]
    then
        echo ${pair[1]}
    fi
done)

cat <<EOL >> /var/lib/pgsql/data/recovery.conf
standby_mode = 'on'
primary_conninfo = 'host=$ip port=5432 user=postgres'
trigger_file = '/var/lib/pgsql/.failover'
restore_command = '/puppy/janitor/bin/postgresql_restore %p %f'
archive_cleanup_command = '/puppy/janitor/bin/postgresql_cleanup %r'
EOL
