# Policy module for the protected interface.
policy_module(protected, 1.0.0)

role protected_r;
role protected_r types protected_sudo_t;

type protected_exec_t;

userdom_unpriv_user_template(protected)

application_domain(protected_t, protected_exec_t)

allow protected_t protected_exec_t:file { execute execute_no_trans };

puppy_sudo(protected)
puppy_exec_puppy_bin(protected_t)

# Used in worker, mentioned in the generated policies, but not really used yet.
# It will come into play during the development of the grand unified logging
# scheme.
attribute puppy_daemon_log_type;
attribute puppy_daemon_exec_type;

# The public role 
puppy_private_role_redux(protected)
role protected_r types private_protected_try_t;
puppy_private_module(protected)
puppy_try_catch(private_protected)

allow private_protected_try_t protected_t:fifo_file write;

# The proxy needs to read Puppy executables.
puppy_read_puppy_bin(protected_sudo_t)

# Transition to the private_protected_t type.
domtrans_pattern(protected_sudo_t, private_protected_try_exec_t, private_protected_try_t)

gen_user(protected_u,, protected_r, s0, s0)
